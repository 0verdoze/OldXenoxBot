// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MetinHostGuest.proto

#include "MetinHostGuest.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MetinHostGuest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BotInstance__MetinHostGuest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MetinHostGuest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BotStatus__MetinHostGuest_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MetinHostGuest_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto;
namespace MetinGuestHost {
class PrivateMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrivateMessage> _instance;
} _PrivateMessage_default_instance_;
class BotStatus_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BotStatus_> _instance;
} _BotStatus__default_instance_;
class BotInstance_DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BotInstance_> _instance;
} _BotInstance__default_instance_;
class BotStatusMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BotStatusMessage> _instance;
} _BotStatusMessage_default_instance_;
class RegisterBotInstanceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterBotInstanceMessage> _instance;
} _RegisterBotInstanceMessage_default_instance_;
class RegisterVMInstanceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterVMInstanceMessage> _instance;
} _RegisterVMInstanceMessage_default_instance_;
class UnregisterBotInstanceMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnregisterBotInstanceMessage> _instance;
} _UnregisterBotInstanceMessage_default_instance_;
}  // namespace MetinGuestHost
static void InitDefaultsscc_info_BotInstance__MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_BotInstance__default_instance_;
    new (ptr) ::MetinGuestHost::BotInstance_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BotInstance__MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BotInstance__MetinHostGuest_2eproto}, {}};

static void InitDefaultsscc_info_BotStatusMessage_MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_BotStatusMessage_default_instance_;
    new (ptr) ::MetinGuestHost::BotStatusMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_BotStatusMessage_MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_BotStatusMessage_MetinHostGuest_2eproto}, {
      &scc_info_BotStatus__MetinHostGuest_2eproto.base,}};

static void InitDefaultsscc_info_BotStatus__MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_BotStatus__default_instance_;
    new (ptr) ::MetinGuestHost::BotStatus_();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BotStatus__MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BotStatus__MetinHostGuest_2eproto}, {}};

static void InitDefaultsscc_info_PrivateMessage_MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_PrivateMessage_default_instance_;
    new (ptr) ::MetinGuestHost::PrivateMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrivateMessage_MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrivateMessage_MetinHostGuest_2eproto}, {}};

static void InitDefaultsscc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_RegisterBotInstanceMessage_default_instance_;
    new (ptr) ::MetinGuestHost::RegisterBotInstanceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto}, {
      &scc_info_BotInstance__MetinHostGuest_2eproto.base,}};

static void InitDefaultsscc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_RegisterVMInstanceMessage_default_instance_;
    new (ptr) ::MetinGuestHost::RegisterVMInstanceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto}, {
      &scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto.base,}};

static void InitDefaultsscc_info_UnregisterBotInstanceMessage_MetinHostGuest_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MetinGuestHost::_UnregisterBotInstanceMessage_default_instance_;
    new (ptr) ::MetinGuestHost::UnregisterBotInstanceMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnregisterBotInstanceMessage_MetinHostGuest_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnregisterBotInstanceMessage_MetinHostGuest_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MetinHostGuest_2eproto[7];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MetinHostGuest_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MetinHostGuest_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MetinHostGuest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::PrivateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::PrivateMessage, botid_),
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::PrivateMessage, targetnickname_),
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::PrivateMessage, textmessage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotStatus_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotStatus_, botid_),
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotStatus_, botstatus_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotInstance_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotInstance_, botid_),
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotInstance_, botname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotStatusMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::BotStatusMessage, status_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::RegisterBotInstanceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::RegisterBotInstanceMessage, bot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::RegisterVMInstanceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::RegisterVMInstanceMessage, vmname_),
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::RegisterVMInstanceMessage, botinstance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::UnregisterBotInstanceMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MetinGuestHost::UnregisterBotInstanceMessage, botid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MetinGuestHost::PrivateMessage)},
  { 8, -1, sizeof(::MetinGuestHost::BotStatus_)},
  { 15, -1, sizeof(::MetinGuestHost::BotInstance_)},
  { 22, -1, sizeof(::MetinGuestHost::BotStatusMessage)},
  { 28, -1, sizeof(::MetinGuestHost::RegisterBotInstanceMessage)},
  { 34, -1, sizeof(::MetinGuestHost::RegisterVMInstanceMessage)},
  { 41, -1, sizeof(::MetinGuestHost::UnregisterBotInstanceMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_PrivateMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_BotStatus__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_BotInstance__default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_BotStatusMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_RegisterBotInstanceMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_RegisterVMInstanceMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MetinGuestHost::_UnregisterBotInstanceMessage_default_instance_),
};

const char descriptor_table_protodef_MetinHostGuest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024MetinHostGuest.proto\022\016MetinGuestHost\"L"
  "\n\016PrivateMessage\022\r\n\005botId\030\001 \001(\r\022\026\n\016targe"
  "tNickname\030\002 \001(\014\022\023\n\013textMessage\030\003 \001(\014\".\n\n"
  "BotStatus_\022\r\n\005botId\030\001 \001(\r\022\021\n\tbotStatus\030\002"
  " \001(\r\".\n\014BotInstance_\022\r\n\005botId\030\001 \001(\r\022\017\n\007b"
  "otName\030\002 \001(\t\">\n\020BotStatusMessage\022*\n\006stat"
  "us\030\001 \003(\0132\032.MetinGuestHost.BotStatus_\"G\n\032"
  "RegisterBotInstanceMessage\022)\n\003bot\030\001 \003(\0132"
  "\034.MetinGuestHost.BotInstance_\"l\n\031Registe"
  "rVMInstanceMessage\022\016\n\006VMName\030\001 \001(\t\022\?\n\013bo"
  "tInstance\030\002 \001(\0132*.MetinGuestHost.Registe"
  "rBotInstanceMessage\"-\n\034UnregisterBotInst"
  "anceMessage\022\r\n\005botId\030\001 \003(\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MetinHostGuest_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MetinHostGuest_2eproto_sccs[7] = {
  &scc_info_BotInstance__MetinHostGuest_2eproto.base,
  &scc_info_BotStatusMessage_MetinHostGuest_2eproto.base,
  &scc_info_BotStatus__MetinHostGuest_2eproto.base,
  &scc_info_PrivateMessage_MetinHostGuest_2eproto.base,
  &scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto.base,
  &scc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto.base,
  &scc_info_UnregisterBotInstanceMessage_MetinHostGuest_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MetinHostGuest_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MetinHostGuest_2eproto = {
  false, false, descriptor_table_protodef_MetinHostGuest_2eproto, "MetinHostGuest.proto", 514,
  &descriptor_table_MetinHostGuest_2eproto_once, descriptor_table_MetinHostGuest_2eproto_sccs, descriptor_table_MetinHostGuest_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_MetinHostGuest_2eproto::offsets,
  file_level_metadata_MetinHostGuest_2eproto, 7, file_level_enum_descriptors_MetinHostGuest_2eproto, file_level_service_descriptors_MetinHostGuest_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MetinHostGuest_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MetinHostGuest_2eproto)), true);
namespace MetinGuestHost {

// ===================================================================

class PrivateMessage::_Internal {
 public:
};

PrivateMessage::PrivateMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.PrivateMessage)
}
PrivateMessage::PrivateMessage(const PrivateMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  targetnickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_targetnickname().empty()) {
    targetnickname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_targetnickname(), 
      GetArena());
  }
  textmessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_textmessage().empty()) {
    textmessage_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_textmessage(), 
      GetArena());
  }
  botid_ = from.botid_;
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.PrivateMessage)
}

void PrivateMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PrivateMessage_MetinHostGuest_2eproto.base);
  targetnickname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  textmessage_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  botid_ = 0u;
}

PrivateMessage::~PrivateMessage() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.PrivateMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrivateMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  targetnickname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  textmessage_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PrivateMessage::ArenaDtor(void* object) {
  PrivateMessage* _this = reinterpret_cast< PrivateMessage* >(object);
  (void)_this;
}
void PrivateMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrivateMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrivateMessage& PrivateMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrivateMessage_MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void PrivateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.PrivateMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targetnickname_.ClearToEmpty();
  textmessage_.ClearToEmpty();
  botid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrivateMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 botId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          botid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes targetNickname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_targetnickname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes textMessage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_textmessage();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrivateMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.PrivateMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 botId = 1;
  if (this->botid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_botid(), target);
  }

  // bytes targetNickname = 2;
  if (this->targetnickname().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_targetnickname(), target);
  }

  // bytes textMessage = 3;
  if (this->textmessage().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_textmessage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.PrivateMessage)
  return target;
}

size_t PrivateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.PrivateMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes targetNickname = 2;
  if (this->targetnickname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_targetnickname());
  }

  // bytes textMessage = 3;
  if (this->textmessage().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_textmessage());
  }

  // uint32 botId = 1;
  if (this->botid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_botid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrivateMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.PrivateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PrivateMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrivateMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.PrivateMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.PrivateMessage)
    MergeFrom(*source);
  }
}

void PrivateMessage::MergeFrom(const PrivateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.PrivateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.targetnickname().size() > 0) {
    _internal_set_targetnickname(from._internal_targetnickname());
  }
  if (from.textmessage().size() > 0) {
    _internal_set_textmessage(from._internal_textmessage());
  }
  if (from.botid() != 0) {
    _internal_set_botid(from._internal_botid());
  }
}

void PrivateMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.PrivateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrivateMessage::CopyFrom(const PrivateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.PrivateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrivateMessage::IsInitialized() const {
  return true;
}

void PrivateMessage::InternalSwap(PrivateMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  targetnickname_.Swap(&other->targetnickname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  textmessage_.Swap(&other->textmessage_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(botid_, other->botid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrivateMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BotStatus_::_Internal {
 public:
};

BotStatus_::BotStatus_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.BotStatus_)
}
BotStatus_::BotStatus_(const BotStatus_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&botid_, &from.botid_,
    static_cast<size_t>(reinterpret_cast<char*>(&botstatus_) -
    reinterpret_cast<char*>(&botid_)) + sizeof(botstatus_));
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.BotStatus_)
}

void BotStatus_::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&botid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&botstatus_) -
      reinterpret_cast<char*>(&botid_)) + sizeof(botstatus_));
}

BotStatus_::~BotStatus_() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.BotStatus_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BotStatus_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BotStatus_::ArenaDtor(void* object) {
  BotStatus_* _this = reinterpret_cast< BotStatus_* >(object);
  (void)_this;
}
void BotStatus_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BotStatus_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BotStatus_& BotStatus_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BotStatus__MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void BotStatus_::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.BotStatus_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&botid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&botstatus_) -
      reinterpret_cast<char*>(&botid_)) + sizeof(botstatus_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BotStatus_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 botId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          botid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 botStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          botstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BotStatus_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.BotStatus_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 botId = 1;
  if (this->botid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_botid(), target);
  }

  // uint32 botStatus = 2;
  if (this->botstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_botstatus(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.BotStatus_)
  return target;
}

size_t BotStatus_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.BotStatus_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 botId = 1;
  if (this->botid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_botid());
  }

  // uint32 botStatus = 2;
  if (this->botstatus() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_botstatus());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BotStatus_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.BotStatus_)
  GOOGLE_DCHECK_NE(&from, this);
  const BotStatus_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BotStatus_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.BotStatus_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.BotStatus_)
    MergeFrom(*source);
  }
}

void BotStatus_::MergeFrom(const BotStatus_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.BotStatus_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.botid() != 0) {
    _internal_set_botid(from._internal_botid());
  }
  if (from.botstatus() != 0) {
    _internal_set_botstatus(from._internal_botstatus());
  }
}

void BotStatus_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.BotStatus_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BotStatus_::CopyFrom(const BotStatus_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.BotStatus_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BotStatus_::IsInitialized() const {
  return true;
}

void BotStatus_::InternalSwap(BotStatus_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BotStatus_, botstatus_)
      + sizeof(BotStatus_::botstatus_)
      - PROTOBUF_FIELD_OFFSET(BotStatus_, botid_)>(
          reinterpret_cast<char*>(&botid_),
          reinterpret_cast<char*>(&other->botid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BotStatus_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BotInstance_::_Internal {
 public:
};

BotInstance_::BotInstance_(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.BotInstance_)
}
BotInstance_::BotInstance_(const BotInstance_& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  botname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_botname().empty()) {
    botname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_botname(), 
      GetArena());
  }
  botid_ = from.botid_;
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.BotInstance_)
}

void BotInstance_::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BotInstance__MetinHostGuest_2eproto.base);
  botname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  botid_ = 0u;
}

BotInstance_::~BotInstance_() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.BotInstance_)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BotInstance_::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  botname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BotInstance_::ArenaDtor(void* object) {
  BotInstance_* _this = reinterpret_cast< BotInstance_* >(object);
  (void)_this;
}
void BotInstance_::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BotInstance_::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BotInstance_& BotInstance_::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BotInstance__MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void BotInstance_::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.BotInstance_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  botname_.ClearToEmpty();
  botid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BotInstance_::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 botId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          botid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string botName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_botname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MetinGuestHost.BotInstance_.botName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BotInstance_::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.BotInstance_)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 botId = 1;
  if (this->botid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_botid(), target);
  }

  // string botName = 2;
  if (this->botname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_botname().data(), static_cast<int>(this->_internal_botname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MetinGuestHost.BotInstance_.botName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_botname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.BotInstance_)
  return target;
}

size_t BotInstance_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.BotInstance_)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string botName = 2;
  if (this->botname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_botname());
  }

  // uint32 botId = 1;
  if (this->botid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_botid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BotInstance_::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.BotInstance_)
  GOOGLE_DCHECK_NE(&from, this);
  const BotInstance_* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BotInstance_>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.BotInstance_)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.BotInstance_)
    MergeFrom(*source);
  }
}

void BotInstance_::MergeFrom(const BotInstance_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.BotInstance_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.botname().size() > 0) {
    _internal_set_botname(from._internal_botname());
  }
  if (from.botid() != 0) {
    _internal_set_botid(from._internal_botid());
  }
}

void BotInstance_::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.BotInstance_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BotInstance_::CopyFrom(const BotInstance_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.BotInstance_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BotInstance_::IsInitialized() const {
  return true;
}

void BotInstance_::InternalSwap(BotInstance_* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  botname_.Swap(&other->botname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(botid_, other->botid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BotInstance_::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class BotStatusMessage::_Internal {
 public:
};

BotStatusMessage::BotStatusMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  status_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.BotStatusMessage)
}
BotStatusMessage::BotStatusMessage(const BotStatusMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      status_(from.status_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.BotStatusMessage)
}

void BotStatusMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BotStatusMessage_MetinHostGuest_2eproto.base);
}

BotStatusMessage::~BotStatusMessage() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.BotStatusMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BotStatusMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void BotStatusMessage::ArenaDtor(void* object) {
  BotStatusMessage* _this = reinterpret_cast< BotStatusMessage* >(object);
  (void)_this;
}
void BotStatusMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BotStatusMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BotStatusMessage& BotStatusMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BotStatusMessage_MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void BotStatusMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.BotStatusMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BotStatusMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .MetinGuestHost.BotStatus_ status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_status(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BotStatusMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.BotStatusMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MetinGuestHost.BotStatus_ status = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_status_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_status(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.BotStatusMessage)
  return target;
}

size_t BotStatusMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.BotStatusMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetinGuestHost.BotStatus_ status = 1;
  total_size += 1UL * this->_internal_status_size();
  for (const auto& msg : this->status_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BotStatusMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.BotStatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BotStatusMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BotStatusMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.BotStatusMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.BotStatusMessage)
    MergeFrom(*source);
  }
}

void BotStatusMessage::MergeFrom(const BotStatusMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.BotStatusMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  status_.MergeFrom(from.status_);
}

void BotStatusMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.BotStatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BotStatusMessage::CopyFrom(const BotStatusMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.BotStatusMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BotStatusMessage::IsInitialized() const {
  return true;
}

void BotStatusMessage::InternalSwap(BotStatusMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  status_.InternalSwap(&other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BotStatusMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RegisterBotInstanceMessage::_Internal {
 public:
};

RegisterBotInstanceMessage::RegisterBotInstanceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  bot_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.RegisterBotInstanceMessage)
}
RegisterBotInstanceMessage::RegisterBotInstanceMessage(const RegisterBotInstanceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      bot_(from.bot_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.RegisterBotInstanceMessage)
}

void RegisterBotInstanceMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto.base);
}

RegisterBotInstanceMessage::~RegisterBotInstanceMessage() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.RegisterBotInstanceMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterBotInstanceMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RegisterBotInstanceMessage::ArenaDtor(void* object) {
  RegisterBotInstanceMessage* _this = reinterpret_cast< RegisterBotInstanceMessage* >(object);
  (void)_this;
}
void RegisterBotInstanceMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterBotInstanceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterBotInstanceMessage& RegisterBotInstanceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterBotInstanceMessage_MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void RegisterBotInstanceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.RegisterBotInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bot_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterBotInstanceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .MetinGuestHost.BotInstance_ bot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_bot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterBotInstanceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.RegisterBotInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MetinGuestHost.BotInstance_ bot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_bot_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_bot(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.RegisterBotInstanceMessage)
  return target;
}

size_t RegisterBotInstanceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.RegisterBotInstanceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MetinGuestHost.BotInstance_ bot = 1;
  total_size += 1UL * this->_internal_bot_size();
  for (const auto& msg : this->bot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterBotInstanceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.RegisterBotInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterBotInstanceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterBotInstanceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.RegisterBotInstanceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.RegisterBotInstanceMessage)
    MergeFrom(*source);
  }
}

void RegisterBotInstanceMessage::MergeFrom(const RegisterBotInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.RegisterBotInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bot_.MergeFrom(from.bot_);
}

void RegisterBotInstanceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.RegisterBotInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterBotInstanceMessage::CopyFrom(const RegisterBotInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.RegisterBotInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterBotInstanceMessage::IsInitialized() const {
  return true;
}

void RegisterBotInstanceMessage::InternalSwap(RegisterBotInstanceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  bot_.InternalSwap(&other->bot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterBotInstanceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class RegisterVMInstanceMessage::_Internal {
 public:
  static const ::MetinGuestHost::RegisterBotInstanceMessage& botinstance(const RegisterVMInstanceMessage* msg);
};

const ::MetinGuestHost::RegisterBotInstanceMessage&
RegisterVMInstanceMessage::_Internal::botinstance(const RegisterVMInstanceMessage* msg) {
  return *msg->botinstance_;
}
RegisterVMInstanceMessage::RegisterVMInstanceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.RegisterVMInstanceMessage)
}
RegisterVMInstanceMessage::RegisterVMInstanceMessage(const RegisterVMInstanceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  vmname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_vmname().empty()) {
    vmname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_vmname(), 
      GetArena());
  }
  if (from._internal_has_botinstance()) {
    botinstance_ = new ::MetinGuestHost::RegisterBotInstanceMessage(*from.botinstance_);
  } else {
    botinstance_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.RegisterVMInstanceMessage)
}

void RegisterVMInstanceMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto.base);
  vmname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  botinstance_ = nullptr;
}

RegisterVMInstanceMessage::~RegisterVMInstanceMessage() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.RegisterVMInstanceMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterVMInstanceMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  vmname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete botinstance_;
}

void RegisterVMInstanceMessage::ArenaDtor(void* object) {
  RegisterVMInstanceMessage* _this = reinterpret_cast< RegisterVMInstanceMessage* >(object);
  (void)_this;
}
void RegisterVMInstanceMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterVMInstanceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterVMInstanceMessage& RegisterVMInstanceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterVMInstanceMessage_MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void RegisterVMInstanceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.RegisterVMInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vmname_.ClearToEmpty();
  if (GetArena() == nullptr && botinstance_ != nullptr) {
    delete botinstance_;
  }
  botinstance_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterVMInstanceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string VMName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_vmname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MetinGuestHost.RegisterVMInstanceMessage.VMName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MetinGuestHost.RegisterBotInstanceMessage botInstance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_botinstance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterVMInstanceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.RegisterVMInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string VMName = 1;
  if (this->vmname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_vmname().data(), static_cast<int>(this->_internal_vmname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MetinGuestHost.RegisterVMInstanceMessage.VMName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_vmname(), target);
  }

  // .MetinGuestHost.RegisterBotInstanceMessage botInstance = 2;
  if (this->has_botinstance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::botinstance(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.RegisterVMInstanceMessage)
  return target;
}

size_t RegisterVMInstanceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.RegisterVMInstanceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string VMName = 1;
  if (this->vmname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_vmname());
  }

  // .MetinGuestHost.RegisterBotInstanceMessage botInstance = 2;
  if (this->has_botinstance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *botinstance_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterVMInstanceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.RegisterVMInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterVMInstanceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterVMInstanceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.RegisterVMInstanceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.RegisterVMInstanceMessage)
    MergeFrom(*source);
  }
}

void RegisterVMInstanceMessage::MergeFrom(const RegisterVMInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.RegisterVMInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vmname().size() > 0) {
    _internal_set_vmname(from._internal_vmname());
  }
  if (from.has_botinstance()) {
    _internal_mutable_botinstance()->::MetinGuestHost::RegisterBotInstanceMessage::MergeFrom(from._internal_botinstance());
  }
}

void RegisterVMInstanceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.RegisterVMInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterVMInstanceMessage::CopyFrom(const RegisterVMInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.RegisterVMInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterVMInstanceMessage::IsInitialized() const {
  return true;
}

void RegisterVMInstanceMessage::InternalSwap(RegisterVMInstanceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  vmname_.Swap(&other->vmname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(botinstance_, other->botinstance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterVMInstanceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UnregisterBotInstanceMessage::_Internal {
 public:
};

UnregisterBotInstanceMessage::UnregisterBotInstanceMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  botid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MetinGuestHost.UnregisterBotInstanceMessage)
}
UnregisterBotInstanceMessage::UnregisterBotInstanceMessage(const UnregisterBotInstanceMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      botid_(from.botid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MetinGuestHost.UnregisterBotInstanceMessage)
}

void UnregisterBotInstanceMessage::SharedCtor() {
}

UnregisterBotInstanceMessage::~UnregisterBotInstanceMessage() {
  // @@protoc_insertion_point(destructor:MetinGuestHost.UnregisterBotInstanceMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnregisterBotInstanceMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void UnregisterBotInstanceMessage::ArenaDtor(void* object) {
  UnregisterBotInstanceMessage* _this = reinterpret_cast< UnregisterBotInstanceMessage* >(object);
  (void)_this;
}
void UnregisterBotInstanceMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnregisterBotInstanceMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnregisterBotInstanceMessage& UnregisterBotInstanceMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnregisterBotInstanceMessage_MetinHostGuest_2eproto.base);
  return *internal_default_instance();
}


void UnregisterBotInstanceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MetinGuestHost.UnregisterBotInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  botid_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnregisterBotInstanceMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint32 botId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_botid(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_botid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnregisterBotInstanceMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MetinGuestHost.UnregisterBotInstanceMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 botId = 1;
  {
    int byte_size = _botid_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_botid(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MetinGuestHost.UnregisterBotInstanceMessage)
  return target;
}

size_t UnregisterBotInstanceMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MetinGuestHost.UnregisterBotInstanceMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 botId = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->botid_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _botid_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnregisterBotInstanceMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MetinGuestHost.UnregisterBotInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UnregisterBotInstanceMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnregisterBotInstanceMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MetinGuestHost.UnregisterBotInstanceMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MetinGuestHost.UnregisterBotInstanceMessage)
    MergeFrom(*source);
  }
}

void UnregisterBotInstanceMessage::MergeFrom(const UnregisterBotInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MetinGuestHost.UnregisterBotInstanceMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  botid_.MergeFrom(from.botid_);
}

void UnregisterBotInstanceMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MetinGuestHost.UnregisterBotInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnregisterBotInstanceMessage::CopyFrom(const UnregisterBotInstanceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MetinGuestHost.UnregisterBotInstanceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnregisterBotInstanceMessage::IsInitialized() const {
  return true;
}

void UnregisterBotInstanceMessage::InternalSwap(UnregisterBotInstanceMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  botid_.InternalSwap(&other->botid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnregisterBotInstanceMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MetinGuestHost
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MetinGuestHost::PrivateMessage* Arena::CreateMaybeMessage< ::MetinGuestHost::PrivateMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::PrivateMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::BotStatus_* Arena::CreateMaybeMessage< ::MetinGuestHost::BotStatus_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::BotStatus_ >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::BotInstance_* Arena::CreateMaybeMessage< ::MetinGuestHost::BotInstance_ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::BotInstance_ >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::BotStatusMessage* Arena::CreateMaybeMessage< ::MetinGuestHost::BotStatusMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::BotStatusMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::RegisterBotInstanceMessage* Arena::CreateMaybeMessage< ::MetinGuestHost::RegisterBotInstanceMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::RegisterBotInstanceMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::RegisterVMInstanceMessage* Arena::CreateMaybeMessage< ::MetinGuestHost::RegisterVMInstanceMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::RegisterVMInstanceMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::MetinGuestHost::UnregisterBotInstanceMessage* Arena::CreateMaybeMessage< ::MetinGuestHost::UnregisterBotInstanceMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MetinGuestHost::UnregisterBotInstanceMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
